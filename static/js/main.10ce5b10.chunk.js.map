{"version":3,"sources":["logo.svg","checkout.png","Coursesales.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Coursesales","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","total","sumPrice","bind","assertThisInitialized","price","setState","_this2","console","log","items","courses","map","item","react_default","a","createElement","Coursesales_Course","name","Instructor","active","id","src","checkout","height","width","Component","Course","_this3","clicker","className","onClick","size","App","logo","alt","src_Coursesales","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10ce5b10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkout.0bb6933f.png\";","import React, { Component } from 'react';\nimport checkout from './checkout.png';\n\n\n\n\nclass Coursesales  extends Component {\n\n  sumPrice(price){\n    this.setState({total: this.state.total + price});\n  }\n  constructor(props){\n    super(props);\n\n    this.state = {\n      total: 0\n    };\n    this.sumPrice = this.sumPrice.bind(this);\n  }\n  render(){\n      console.log(this.props.items);\n      var courses = this.props.items.map((item) => {\n        return <Course name = {item.name} price = {item.price} Instructor = {item.Instructor} sumPrice = {this.sumPrice} active = {item.active} />\n\n      });\n\n    return(\n      <div>\n        <h1>\n          <mark>\n          Courses for you to buy.\n          </mark>\n        </h1>\n        <p id=\"total\"> Total <img src={checkout} height=\"62\" width=\"72\" /><b>{this.state.total}</b></p>\n\n        <div id=\"c1\">\n          {courses}\n        </div>\n        </div>\n    );\n  }\n}\nexport default Coursesales;\n\n\nclass Course  extends Component {\n  clicker(){\n    var active = !this.state.active;\n    this.setState({active: active});\n    this.props.sumPrice( active ? this.props.price: -this.props.price);\n  }\n  constructor(props){\n    super(props);\n\n    this.state = {\n      active : false\n    };\n    this.clicker = this.clicker.bind(this);\n  }\n  render(){\n    return(\n      <div>\n        <div className=\"c\">\n        <p id =\"demo\"\n          onClick={this.clicker}>  <font size = \"5\">{this.props.name}</font> <br /> Instructor: <i>{this.props.Instructor}</i> <b> {this.props.price}</b><br />Buy Now </p>\n\n      </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Coursesales from './Coursesales';\n\nclass App extends Component {\n  render() {\n    var courses = [\n      {name:'Deep Learning in Python', Instructor: 'Dawn Ranier', price:199, },\n      {name:'An Introduction to Interactive Programming in Python (Part 1)', price:299, Instructor: 'Hites Chaudhary'},\n      {name:'Python + SQL + Tableau: Integrating Python, SQL, and Tableau', price:99, Instructor: 'Justin Kive'},\n      {name:'Deep Learning A-Z™: Hands-On Artificial Neural Networks', price:899, Instructor: 'Kirill Eremenko'},\n      {name:'React Basics', price:99, Instructor: 'Mark Youngblood'},\n      {name:'Deep Learning: Advanced NLP and RNNs ', price:199, Instructor: 'María Luz Arcila'},\n      {name:'Advanced AI: Deep Reinforcement Learning in Python ', price:199, Instructor: 'Priyanka Hiremath'},\n      {name:'Python for Data Science and Machine Learning Bootcamps ', price:199, Instructor: 'Brittany Williams'},\n      {name:'Reiki Level I, II and Master/Teacher Program ', price:199, Instructor: 'Meryl Corke'},\n      {name:'Animal & Pet Reiki Energy Healing Certification Course ', price:199, Instructor: 'Amar Romascan'},\n      {name:'Essential Energy Care for Empaths', price:199, Instructor: 'Mags Eatock'}\n\n\n]\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            <mark>\n            Welcome to Course-Sales page.\n          </mark>\n          </p>\n        </header>\n        <p>\n          <Coursesales items = {courses} />\n        </p>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}